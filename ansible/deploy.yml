---
- hosts: all
  remote_user: stash

  vars:
    hostname: "{{ lookup('env','SIGNALK_STASH_PROD_HOST') }}"
    mqtt_runner:
      username: "{{ lookup('env','SIGNALK_STASH_PROD_MQTT_RUNNER_USERNAME') }}"
      password: "{{ lookup('env','SIGNALK_STASH_PROD_MQTT_RUNNER_PASSWORD') }}"
    mqtt_latestreader:
      username: "{{ lookup('env','SIGNALK_STASH_PROD_MQTT_LATESTREADER_USERNAME') }}"
      password: "{{ lookup('env','SIGNALK_STASH_PROD_MQTT_LATESTREADER_PASSWORD') }}"
    grafana:
      password: "{{ lookup('env','SIGNALK_STASH_PROD_GRAFANA_PASSWORD') }}"

  tasks:
    - name: Copy Docker compose file to remote
      copy:
        src: ../docker-compose.prod.yml
        dest: docker-compose.prod.yml

    - name: Fail if MQTT runner credentials are missing
      fail:
        msg: "Mqtt runner credentials are missing. Set SIGNALK_STASH_PROD_MQTT_RUNNER_USERNAME and SIGNALK_STASH_PROD_MQTT_RUNNER_PASSWORD variables."
      when: mqtt_runner.username == "" or mqtt_runner.password == ""

    - name: Fail if MQTT latest reader credentials are missing
      fail:
        msg: "Mqtt latest reader credentials are missing. Set SIGNALK_STASH_PROD_MQTT_LATESTREADER_USERNAME and SIGNALK_STASH_PROD_MQTT_LATESTREADER_PASSWORD variables."
      when: mqtt_latestreader.username == "" or mqtt_latestreader.password == ""

    - name: Generate Docker environment file
      copy:
        dest: docker-prod.env
        content: |
          SIGNALK_STASH_PROD_MQTT_RUNNER_USERNAME={{ mqtt_runner.username }}
          SIGNALK_STASH_PROD_MQTT_RUNNER_PASSWORD={{ mqtt_runner.password }}
          SIGNALK_STASH_PROD_MQTT_LATESTREADER_USERNAME={{mqtt_latestreader.username}}
          SIGNALK_STASH_PROD_MQTT_LATESTREADER_PASSWORD={{mqtt_latestreader.password}}

    - name: Copy Mosquitto TLS configuration file
      template:
        src: mosquitto_tls.conf.j2
        dest: mosquitto_tls.conf

    - name: Fail if Grafana admin password is missing
      fail:
        msg: "Grafana admin password is missing. Set SIGNALK_STASH_PROD_GRAFANA_PASSWORD variable."
      when: grafana.password == ""

    - name: Create Grafana configuration directory
      file:
        path: "grafana/provisioning"
        state: directory

    - name: Copy Grafana configuration files
      synchronize:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        delete: yes
        recursive: yes
      with_items:
        - { src: "../grafana/provisioning/dashboards", dest: "grafana/provisioning" }
        - { src: "../grafana/provisioning/datasources/prod/", dest: "grafana/provisioning/datasources/" }

    - name: Create ClickHouse directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - clickhouse
        - clickhouse/data

    - name: Setup production Docker containers
      docker_compose:
        project_name: signalk-stash-prod
        project_src: .
        pull: true
        files:
          - docker-compose.prod.yml
      environment:
        # This will be given as -e command line parameter
        TAG: "{{ docker_tag }}"
        GRAFANA_PASSWORD: "{{ grafana.password }}"
        GRAFANA_ROOT_URL: "/grafana"