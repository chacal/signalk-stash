version: 2.1
commands:
  build:
    description: 'Build & start project dependencies'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-signal-k-stash-{{ checksum "package.json" }}
      - run:
          command: npm install
      - save_cache:
          key: v1-signal-k-stash-{{ checksum "package.json" }}
          paths:
            - ~/.cache
            - ~/.npm
      - run:
          command: make docker-test-up
      - run:
          name: 'Wait for dependencies to start up'
          command: npx wait-on -w 2000 tcp:45432 && npx wait-on -w 2000 tcp:41883

jobs:
  unit-test:
    machine: true
    steps:
      - build
      - run:
          command: make test
      - store_test_results:
          path: test_reports

  integration-test:
    machine: true
    steps:
      - build
      - run:
          command: make start-test
          background: true
      - run:
          name: 'Wait for test server to start'
          command: npx wait-on "http://localhost:43000/tracks?context=self"
      - run:
          command: make test-integration
      - store_test_results:
          path: test_reports

  build-containers:
    machine: true
    steps:
      - run:
          name: Export TAG variable
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ];
              echo 'export TAG=latest' >> $BASH_ENV
            else
              echo 'export TAG=build-${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            fi
      - checkout
      - run:
          name: Build api-server container
          command: make docker-build-apiserver
      - run:
          name: Build mqtt-input container
          command: make docker-build-mqtt-input
      - run:
          name: Push containers to Docker Hub
          command: |
            echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
            make docker-tag-and-push-apiserver
            make docker-tag-and-push-mqtt-input
      - run:
          name: Save used tag to a file
          command: mkdir /tmp/workspace && echo ${TAG} > /tmp/workspace/tag
      - persist_to_workspace:
          root: /tmp
          paths:
            - workspace

  deploy:
    docker:
      - image: williamyeh/ansible:debian9
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - run:
          name: Install dependencies
          command: apt update && apt install -y make python-cryptography
      - run:
          command: TAG=$(cat /tmp/workspace/tag) make ansible-deploy-prod

workflows:
  version: 2
  test-and-build:
    jobs:
      - unit-test
      - integration-test
      - build-containers:
          requires:
            - unit-test
            - integration-test
          filters:
            branches:
              only:
                - master
                - prod
      - deploy:
          requires:
            - build-containers
          filters:
            branches:
              only: prod
